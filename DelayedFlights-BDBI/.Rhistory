df2 <- read.csv('table-1.csv', header=TRUE, sep=",")
head(df2)
statesDF <-read.csv('table-1-states.csv', header=TRUE, sep=",")
View(statesDF)
statesDF <-read.csv('table-1-states2.csv', header=TRUE, sep=",")
View(statesDF)
statesDF <-read.csv('table-1-states2.csv', header=TRUE, sep=',')
statesDF <-read.csv('table-1-states.csv', header=TRUE, sep=',')
statesDF <-read.csv('table-1-states2.csv', header=TRUE, sep=',')
statesDF <-read.csv('table-1-states2.csv', header=TRUE, sep=',')
View(statesDF)
df1 <- read.csv('vuelosLimpio.csv', header=TRUE, sep=",")
df2 <- read.csv('table-1-states2.csv', header=TRUE, sep=",")
head(df2)
df2$Role = NULL
df2$Enplanements = NULL
df2[df2$FAA == "",] = NA
filtro = is.na(df2$FAA)
head(df2)
df2Final = df2[filtro == FALSE,]
write.csv(df2Final,"IATANames.csv", row.names = FALSE)
df3 <- read.csv("IATANames.csv", header=TRUE, sep=",")
df2 <- read.csv('table-1-states2.csv', header=TRUE, sep=",")
head(df2)
df2$Role = NULL
df2$Enplanements = NULL
df2[df2$FAA == "",] = NA
filtro = is.na(df2$FAA)
head(df2)
df2Final = df2[filtro == FALSE,]
write.csv(df2Final,"IATANames.csv", row.names = FALSE)
df3 <- read.csv("IATANames.csv", header=TRUE, sep=",")
df2 <- read.csv('table-1-states2.csv', header=TRUE, sep=",")
head(df2)
df2$Role = NULL
df2$Enplanements = NULL
df2[df2$FAA == "",] = NA
filtro = is.na(df2$FAA)
head(df2)
df2Final = df2[filtro == FALSE,]
write.csv(df2Final,"IATANames.csv", row.names = FALSE)
df3 <- read.csv("IATANames.csv", header=TRUE, sep=",")
View(df2Final)
View(df2)
df2 <- read.csv('table-1-states2.csv', header=TRUE, sep=",")
head(df2)
df2$Role = NULL
df2$Enplanements = NULL
df2[df2$FAA == "",] = NA
filtro = is.na(df2$FAA)
head(df2)
df2Final = df2[filtro == FALSE,]
write.csv(df2Final,"IATANames.csv", row.names = FALSE, sep=",")
df3 <- read.csv("IATANames.csv", header=TRUE, sep=",")
df2 <- read.csv('table-1-states2.csv', header=TRUE, sep=",")
head(df2)
df2$Role = NULL
df2$Enplanements = NULL
df2[df2$FAA == "",] = NA
filtro = is.na(df2$FAA)
head(df2)
df2Final = df2[filtro == FALSE,]
write.csv(df2Final,"IATANames.csv", row.names = FALSE)
df3 <- read.csv("IATANames.csv", header=TRUE, sep=",")
df2 <- read.csv('table-1-states2.csv', header=TRUE, sep=",")
head(df2)
df2$Role = NULL
df2$Enplanements = NULL
df2[df2$FAA == "",] = NA
filtro = is.na(df2$FAA)
head(df2)
df2Final = df2[filtro == FALSE,]
write.csv(df2Final,"IATANames.csv", row.names = FALSE)
df3 <- read.csv("IATANames.csv", header=TRUE, sep=",")
df3 <- read.csv("IATANames.csv", header=TRUE, sep=",")
df3$ICAO=NULL
View(df3)
df3$FAA = NULL
head(df3)
origenes = merge(x=df1, y=df3, by.x=c('Origin'),by.y=c('IATA'), all.x= TRUE,sort = FALSE)
View(origenes)
head(origenes)
library(tidyverse)
origenes <- origenes %>%
rename(
OriginCode = Origin,
OriginCity = City,
OriginAirport = Airport,
OriginState = State
)
destinos = merge(x=origenes, y=df3, by.x=c('Dest'),by.y=c('IATA'), all.x= TRUE,sort = FALSE)
head(destinos)
destinos <- destinos %>%
rename(
DestCode = Dest,
DestCity = City,
DestAirport = Airport,
DestState = State
)
df4 = destinos
head(df4)
summary(df4)
write.csv(df4,"vuelosLimpio2.csv", row.names = FALSE)
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
df1 <- read.csv('vuelosLimpioMap.csv', header=TRUE, sep=",")
library(ggplot2)                         # Plots
library(ggrepel)                         # Nice labels
library(gganimate)                       # Animations
library(ggspatial);library(sf)           # Map plots
library(maps);library(rnaturalearth)     # Map data
theme_set(theme_bw())                    # Set theme for all plots
library("sf")
library("tools")
library("rnaturalearthdata")
View(df1)
df1$TotalTimeDifference = df1$TotalDelay
df1$TotalDelay = df1$ArrDelay + df1$DepDelay + df1$CarrierDelay + df1$WeatherDelay + df1$NASDelay + df1$SecurityDelay + df1$LateAircraftDelay
summary(df1)
df1 <- read.csv('vuelosLimpioMap.csv', header=TRUE, sep=",")
library(ggplot2)                         # Plots
library(ggrepel)                         # Nice labels
library(gganimate)                       # Animations
library(ggspatial);library(sf)           # Map plots
library(maps);library(rnaturalearth)     # Map data
theme_set(theme_bw())                    # Set theme for all plots
library("sf")
library("tools")
library("rnaturalearthdata")
df1$TotalTimeDifference = df1$TotalDelay
df1$TotalDelay = df1$ArrDelay + df1$DepDelay + df1$CarrierDelay + df1$WeatherDelay + df1$NASDelay + df1$SecurityDelay + df1$LateAircraftDelay
write.csv(df1,"vuelosLimpioMap.csv", row.names = FALSE)
aggregate(x=df1,by= strftime(df1$Date, "%m"),FUN=sum)
df2<-aggregate(x=df1,by=list(strftime(df1$Date, "%m")),FUN=sum)
#1 agrupar por (mes o semanana) sumando en cada tipo tipo de delay
df1$Month = strftime(df1$Date, "%m")
df1$Month
df2<-aggregate(x=df1 %>% select(Month,ArrDelay,DepDelay,CarrierDelay,WeatherDelay,NASDelay,SecurityDelay,LateAircraftDelay,TotalDelay),by=list(df1$Month),FUN=sum)
df1
#1 agrupar por (mes o semanana) sumando en cada tipo tipo de delay
df1$Month = as.numeric(strftime(df1$Date, "%m"))
df1$Month
df2<-aggregate(x=df1 %>% select(Month,ArrDelay,DepDelay,CarrierDelay,WeatherDelay,NASDelay,SecurityDelay,LateAircraftDelay,TotalDelay),by=list(df1$Month),FUN=sum)
View(df2)
df1<-na.omit(df1)
df2<-aggregate(x=df1 %>% select(Month,ArrDelay,DepDelay,CarrierDelay,WeatherDelay,NASDelay,SecurityDelay,LateAircraftDelay,TotalDelay),by=list(df1$Month),FUN=sum)
df2<-aggregate(x=df1 %>% select(ArrDelay,DepDelay,CarrierDelay,WeatherDelay,NASDelay,SecurityDelay,LateAircraftDelay,TotalDelay),by=list(df1$Month),FUN=sum)
df1$Weekday = as.POSIXlt(df1$Date)$wday
df1$Weekday = as.POSIXlt(df1$Date)$wday + 1
df2<-aggregate(x=df1 %>% select(ArrDelay,DepDelay,CarrierDelay,WeatherDelay,NASDelay,SecurityDelay,LateAircraftDelay,TotalDelay),by=list(df1$Weekday),FUN=sum)
df2$ArrDelayPerc = df2$ArrDelay / df2$TotalDelay
df2$DepDelayPerc = df2$DepDelay / df2$TotalDelay
df2$CarrierDelayPerc = df2$CarrierDelay / df2$TotalDelay
df2$WeatherDelayPerc = df2$WeatherDelay / df2$TotalDelay
df2$NASDelayPerc = df2$NASDelay / df2$TotalDelay
df2$SecurityDelayPerc = df2$SecurityDelay / df2$TotalDelay
df2$LateAircraftDelayPerc = df2$LateAircraftDelay / df2$TotalDelay
data.frame(df3)
df3$Weekday = df2$"Group.1"
df3 = data.frame(df2$"Group.1")
df3
View(df3)
df3 <- df3 %>%
rename(
Weekdays = df2.Group.1
)
shiny::runApp()
df1 <- read.csv('vuelosLimpioMap.csv', header=TRUE, sep=",")
library(ggplot2)                         # Plots
library(ggrepel)                         # Nice labels
library(gganimate)                       # Animations
library(ggspatial);library(sf)           # Map plots
library(maps);library(rnaturalearth)     # Map data
theme_set(theme_bw())                    # Set theme for all plots
library("sf")
library("tools")
library("rnaturalearthdata")
#1 agrupar por (mes o semanana) sumando en cada tipo tipo de delay
df1<-na.omit(df1)
df1$Weekday = as.POSIXlt(df1$Date)$wday + 1
df2<-aggregate(x=df1 %>% select(ArrDelay,DepDelay,CarrierDelay,WeatherDelay,NASDelay,SecurityDelay,LateAircraftDelay,TotalDelay),by=list(df1$Weekday),FUN=sum)
df2$ArrDelayPerc = df2$ArrDelay / df2$TotalDelay
df2$DepDelayPerc = df2$DepDelay / df2$TotalDelay
df2$CarrierDelayPerc = df2$CarrierDelay / df2$TotalDelay
df2$WeatherDelayPerc = df2$WeatherDelay / df2$TotalDelay
df2$NASDelayPerc = df2$NASDelay / df2$TotalDelay
df2$SecurityDelayPerc = df2$SecurityDelay / df2$TotalDelay
df2$LateAircraftDelayPerc = df2$LateAircraftDelay / df2$TotalDelay
df3 = data.frame(df2$"Group.1")
df3 <- df3 %>%
rename(
Weekdays = df2.Group.1
)
df3$DelayType = NULL
df3$Perc = NULL
delayTypes <- c("ArrDelay", "DepDelay", "CarrierDelay", "WeatherDelay", "NASDelay", "SecurityDelay", "LateAircraftDelay")
#Buscar una forma de por cada uno de los delays crear una columna
df1<-na.omit(df1)
df1 <- read.csv('vuelosLimpioMap.csv', header=TRUE, sep=",")
df1<-na.omit(df1)
df1$Month = as.POSIXlt(df1$Date)$mon
df1$Month = as.POSIXlt(df1$Date)$mon +1
df2<-aggregate(x=df1 %>% select(ArrDelay,DepDelay,CarrierDelay,WeatherDelay,NASDelay,SecurityDelay,LateAircraftDelay,TotalDelay),by=list(df1$Month),FUN=sum)
library(dplyr)
df2<-aggregate(x=df1 %>% select(ArrDelay,DepDelay,CarrierDelay,WeatherDelay,NASDelay,SecurityDelay,LateAircraftDelay,TotalDelay),by=list(df1$Month),FUN=sum)
df2$ArrDelayPerc = df2$ArrDelay / df2$TotalDelay
df2$DepDelayPerc = df2$DepDelay / df2$TotalDelay
df2$CarrierDelayPerc = df2$CarrierDelay / df2$TotalDelay
df2$WeatherDelayPerc = df2$WeatherDelay / df2$TotalDelay
df2$NASDelayPerc = df2$NASDelay / df2$TotalDelay
df2$SecurityDelayPerc = df2$SecurityDelay / df2$TotalDelay
df2$LateAircraftDelayPerc = df2$LateAircraftDelay / df2$TotalDelay
df3 = data.frame(df2$"Group.1")
df3 <- df3 %>%
rename(
Month = df2.Group.1
)
df3$DelayType = NULL
df3$Perc = NULL
delayTypes <- c("ArrDelay", "DepDelay", "CarrierDelay", "WeatherDelay", "NASDelay", "SecurityDelay", "LateAircraftDelay")
months = df2$"Group.1"
df3 = df1[FALSE,]
for(i in 1:dim(months)[1]) {
for(j in 1:dim(delayTypes)[2]) {
print(months[i])
print(delayTypes[j])
print("-----------")
}
}
months = df2$"Group.1"
for(i in 1:dim(months)[1]) {
for(j in 1:dim(delayTypes)[2]) {
print(months[i])
print(delayTypes[j])
print("-----------")
}
}
for(i in 1:dim(months) {
for(i in 1:dim(months) {
for(j in 1:dim(delayTypes)) {
print(months[i])
print(delayTypes[j])
print("-----------")
}
}
for(i in 1:dim(months)) {
for(j in 1:dim(delayTypes)) {
print(months[i])
print(delayTypes[j])
print("-----------")
}
}
dim(months)
lengths(months)
lengths(delayTypes)
lengths(months)[0]
length(months)
for(i in 1:length(months)) {
for(j in 1:length(delayTypes)) {
print(months[i])
print(delayTypes[j])
print("-----------")
}
}
df3<-data.frame()
names(df)<-c("Months","DelayType")
df3<-data.frame()
names(df3)<-c("Months","DelayType")
df3<-data.frame("NA","NA")
df3<-data.frame(NA,NA)
names(df3)<-c("Months","DelayType")
names(df3)<-c("Month","DelayType")
for(i in 1:length(months)) {
for(j in 1:length(delayTypes)) {
print(months[i])
print(delayTypes[j])
print("-----------")
df3[i*f -1] <- c(months[i], delayTypes[j])
}
}
for(i in 1:length(months)) {
for(j in 1:length(delayTypes)) {
print(months[i])
print(delayTypes[j])
print("-----------")
df3[i*j -1] <- c(months[i], delayTypes[j])
}
}
df3<-data.frame(NA,NA)
names(df3)<-c("Month","DelayType")
for(i in 1:length(months)) {
for(j in 1:length(delayTypes)) {
print(months[i])
print(delayTypes[j])
print("-----------")
df3[i*j] <- c(months[i], delayTypes[j])
}
}
for(i in 1:length(months)) {
for(j in 1:length(delayTypes)) {
print(months[i])
print(delayTypes[j])
print("-----------")
df3[i+j] = c(months[i], delayTypes[j])
}
}
df3<-data.frame(NA,NA)
names(df3)<-c("Month","DelayType")
for(i in 1:length(months)) {
for(j in 1:length(delayTypes)) {
print(months[i])
print(delayTypes[j])
print("-----------")
df3 %>% add_row(Month=months[i], DelayType=delayTypes[j])
}
}
View(df)
View(df3)
View(df3)
View(df3)
df3 %>% add_row(Month=months[i], DelayType=delayTypes[j])
df1 <- read.csv('vuelosLimpioMap.csv', header=TRUE, sep=",")
df1 <- read.csv('vuelosLimpioMap.csv', header=TRUE, sep=",")
library(ggplot2)                         # Plots
library(ggrepel)                         # Nice labels
library(gganimate)                       # Animations
library(ggspatial);library(sf)           # Map plots
library(maps);library(rnaturalearth)     # Map data
theme_set(theme_bw())                    # Set theme for all plots
library("sf")
library("tools")
library("rnaturalearthdata")
library(dplyr)
#1 agrupar por (mes o semanana) sumando en cada tipo tipo de delay
df1<-na.omit(df1)
df1$Month = as.POSIXlt(df1$Date)$mon +1
df2<-aggregate(x=df1 %>% select(ArrDelay,DepDelay,CarrierDelay,WeatherDelay,NASDelay,SecurityDelay,LateAircraftDelay,TotalDelay),by=list(df1$Month),FUN=sum)
df2$ArrDelayPerc = df2$ArrDelay / df2$TotalDelay
df2$DepDelayPerc = df2$DepDelay / df2$TotalDelay
df2$CarrierDelayPerc = df2$CarrierDelay / df2$TotalDelay
df2$WeatherDelayPerc = df2$WeatherDelay / df2$TotalDelay
df2$NASDelayPerc = df2$NASDelay / df2$TotalDelay
df2$SecurityDelayPerc = df2$SecurityDelay / df2$TotalDelay
df2$LateAircraftDelayPerc = df2$LateAircraftDelay / df2$TotalDelay
months = df2$"Group.1"
delayTypes <- c("ArrDelay", "DepDelay", "CarrierDelay", "WeatherDelay", "NASDelay", "SecurityDelay", "LateAircraftDelay")
df3<-data.frame(NA,NA)
names(df3)<-c("Month","DelayType")
for(i in 1:length(months)) {
for(j in 1:length(delayTypes)) {
print(months[i])
print(delayTypes[j])
print("-----------")
row <- c(months[i], delayTypes[j])
df3<-rbind(df3,row)
}
}
df3<-na.omit(df3)
dim(df2)
dim(df2)[0]
dim(df2)[1]
df3[1]
df3[:1]
df3[,1]
df3[1,]
df3$Month[1,]
df3$Month[1]
for (i in 1:dim(df2)[1]){
df3$Perc[df3$Month==i & df3$DelayType=="ArrDelay"] <- df2$ArrDelayPerc[df2$"Group.1"==i]
df3$Perc[df3$Month==i & df3$DelayType=="DepDelay"] <- df2$DepDelayPerc[df2$"Group.1"==i]
df3$Perc[df3$Month==i & df3$DelayType=="CarrierDelay"] <- df2$CarrierDelayPerc[df2$"Group.1"==i]
df3$Perc[df3$Month==i & df3$DelayType=="WeatherDelay"] <- df2$WeatherDelayPerc[df2$"Group.1"==i]
df3$Perc[df3$Month==i & df3$DelayType=="NASDelay"] <- df2$NASDelayPerc[df2$"Group.1"==i]
df3$Perc[df3$Month==i & df3$DelayType=="SecurityDelay"] <- df2$SecurityDelayPerc[df2$"Group.1"==i]
df3$Perc[df3$Month==i & df3$DelayType=="LateAircraftDelay"] <- df2$LateAircraftDelayPerc[df2$"Group.1"==i]
}
ggplot(data = df3) +
geom_bar(aes(x = Month, y = Perc, fill = DelayType),
position = 'stack', stat = 'identity') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(labels = function(x) paste0(x*100, '%')) +
labs(x = 'Time', y = 'Percentage of weekly flights', fill = 'Delay type',
title = 'Breakdown of delay type of flights in the northern part of the US in 2015',
subtitle = 'States that are part of the analysis include AK, IL, IN, MA, ME, MI, MN, NH, NY, VT',
caption = 'Source: publicly available data from DoT') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7))
paste(paste("2008-",df3$Month),"-01")
paste(paste("2008-",df3$Month,sep=""),"-01",sep="")
df3$Month <- as.Date(paste(paste("2008-",df3$Month,sep=""),"-01",sep=""))
ggplot(data = df3) +
geom_bar(aes(x = Month, y = Perc, fill = DelayType),
position = 'stack', stat = 'identity') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(labels = function(x) paste0(x*100, '%')) +
labs(x = 'Time', y = 'Percentage of weekly flights', fill = 'Delay type',
title = 'Breakdown of delay type of flights in the northern part of the US in 2015',
subtitle = 'States that are part of the analysis include AK, IL, IN, MA, ME, MI, MN, NH, NY, VT',
caption = 'Source: publicly available data from DoT') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7))
ggplot(data = df3) +
geom_bar(aes(x = Month, y = Perc, fill = DelayType),
position = 'stack', stat = 'identity') +
scale_x_date(date_breaks = '1 month', date_labels = '%b') +
scale_y_continuous(labels = function(x) paste0(x*100, '%')) +
labs(x = 'Time', y = 'Percentage of weekly flights', fill = 'Delay type',
title = 'Breakdown of delay type of flights of the US in 2008',
subtitle = 'Subtitle',
caption = 'Caption') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7))
library(data.table)
shiny::runApp()
runApp()
ggplot
ggplot(df1[filtro,], aes(x=Date, group=CancellationCode, color=CancellationCode)) + geom_density()
df1 <- read.csv('vuelosLimpioMap.csv', header=TRUE, sep=",")
library(data.table)
library(ggplot2)
start = as.Date("2008-12-24")
end = as.Date("2008-12-25")
filtro = df1$Date >= start & df1$Date<=end
ggplot
ggplot(x=df1[filtro,], aes(x=Date, group=CancellationCode, color=CancellationCode)) +
geom_density() +
labs(x = 'Likelihood weather is causing delay', y = 'Percentage of delayed flights',
title = 'Percentage of delayed flights vs likelihood of weather causing the delay',
subtitle = "Subtitle",
caption = 'Source: publicly available data from DoT') +
theme(plot.caption = element_text(vjust = 7))
ggplot(data=df1[filtro,], aes(x=Date, group=CancellationCode, color=CancellationCode)) +
geom_density() +
labs(x = 'Likelihood weather is causing delay', y = 'Percentage of delayed flights',
title = 'Percentage of delayed flights vs likelihood of weather causing the delay',
subtitle = "Subtitle",
caption = 'Source: publicly available data from DoT') +
theme(plot.caption = element_text(vjust = 7))
start = as.Date("2008-12-22")
end = as.Date("2008-12-25")
filtro = df1$Date >= start & df1$Date<=end
ggplot(data=df1[filtro,], aes(x=Date, group=CancellationCode, color=CancellationCode)) +
geom_density() +
labs(x = 'Likelihood weather is causing delay', y = 'Percentage of delayed flights',
title = 'Percentage of delayed flights vs likelihood of weather causing the delay',
subtitle = "Subtitle",
caption = 'Source: publicly available data from DoT') +
theme(plot.caption = element_text(vjust = 7))
ggplot(data=df1[filtro,], aes(x=Date, group=CancellationCode, color=CancellationCode), size=5) +
geom_density() +
labs(x = 'Likelihood weather is causing delay', y = 'Percentage of delayed flights',
title = 'Percentage of delayed flights vs likelihood of weather causing the delay',
subtitle = "Subtitle",
caption = 'Source: publicly available data from DoT') +
theme(plot.caption = element_text(vjust = 7))
start = as.Date("2008-12-08")
end = as.Date("2008-12-25")
filtro = df1$Date >= start & df1$Date<=end
ggplot(data=df1[filtro,], aes(x=Date, group=CancellationCode, color=CancellationCode)) +
geom_density() +
labs(x = 'Likelihood weather is causing delay', y = 'Percentage of delayed flights',
title = 'Percentage of delayed flights vs likelihood of weather causing the delay',
subtitle = "Subtitle",
caption = 'Source: publicly available data from DoT') +
theme(plot.caption = element_text(vjust = 7))
start = as.Date("2008-01-08")
end = as.Date("2008-12-25")
filtro = df1$Date >= start & df1$Date<=end
ggplot(data=df1[filtro,], aes(x=Date, group=CancellationCode, color=CancellationCode)) +
geom_density() +
labs(x = 'Likelihood weather is causing delay', y = 'Percentage of delayed flights',
title = 'Percentage of delayed flights vs likelihood of weather causing the delay',
subtitle = "Subtitle",
caption = 'Source: publicly available data from DoT') +
theme(plot.caption = element_text(vjust = 7))
ggplot(data=df1[filtro,], aes(x=Date, group=CancellationCode, color=CancellationCode)) +
geom_density() +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
labs(x = 'Likelihood weather is causing delay', y = 'Percentage of delayed flights',
title = 'Percentage of delayed flights vs likelihood of weather causing the delay',
subtitle = "Subtitle",
caption = 'Source: publicly available data from DoT') +
theme(plot.caption = element_text(vjust = 7))
ggplot(data=df1[filtro,], aes(x=as.Date(Date), group=CancellationCode, color=CancellationCode)) +
geom_density() +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
labs(x = 'Likelihood weather is causing delay', y = 'Percentage of delayed flights',
title = 'Percentage of delayed flights vs likelihood of weather causing the delay',
subtitle = "Subtitle",
caption = 'Source: publicly available data from DoT') +
theme(plot.caption = element_text(vjust = 7))
ggplot(data=df1[filtro,], aes(x=as.Date(Date), group=CancellationCode, color=CancellationCode)) +
geom_density() +
scale_x_date(date_breaks = '1 week', date_labels = '%b %d') +
labs(x = 'Likelihood weather is causing delay', y = 'Percentage of delayed flights',
title = 'Percentage of delayed flights vs likelihood of weather causing the delay',
subtitle = "Subtitle",
caption = 'Source: publicly available data from DoT') +
theme(plot.caption = element_text(vjust = 7))
filtro = df1$Date >= start & df1$Date<=end
start = as.Date("2008-11-08")
end = as.Date("2008-12-25")
filtro = df1$Date >= start & df1$Date<=end
ggplot(data=df1[filtro,], aes(x=as.Date(Date), group=CancellationCode, color=CancellationCode)) +
geom_density() +
scale_x_date(date_breaks = '1 week', date_labels = '%b %d') +
labs(x = 'Likelihood weather is causing delay', y = 'Percentage of delayed flights',
title = 'Percentage of delayed flights vs likelihood of weather causing the delay',
subtitle = "Subtitle",
caption = 'Source: publicly available data from DoT') +
theme(plot.caption = element_text(vjust = 7))
runApp()
