subtitle = "Subtitle",
caption = 'Source: publicly available data from DoT') +
theme(plot.caption = element_text(vjust = 7))
ggplot(data=df1[filtro,], aes(x=Date, group=CancellationCode, color=CancellationCode), size=5) +
geom_density() +
labs(x = 'Likelihood weather is causing delay', y = 'Percentage of delayed flights',
title = 'Percentage of delayed flights vs likelihood of weather causing the delay',
subtitle = "Subtitle",
caption = 'Source: publicly available data from DoT') +
theme(plot.caption = element_text(vjust = 7))
start = as.Date("2008-12-08")
end = as.Date("2008-12-25")
filtro = df1$Date >= start & df1$Date<=end
ggplot(data=df1[filtro,], aes(x=Date, group=CancellationCode, color=CancellationCode)) +
geom_density() +
labs(x = 'Likelihood weather is causing delay', y = 'Percentage of delayed flights',
title = 'Percentage of delayed flights vs likelihood of weather causing the delay',
subtitle = "Subtitle",
caption = 'Source: publicly available data from DoT') +
theme(plot.caption = element_text(vjust = 7))
start = as.Date("2008-01-08")
end = as.Date("2008-12-25")
filtro = df1$Date >= start & df1$Date<=end
ggplot(data=df1[filtro,], aes(x=Date, group=CancellationCode, color=CancellationCode)) +
geom_density() +
labs(x = 'Likelihood weather is causing delay', y = 'Percentage of delayed flights',
title = 'Percentage of delayed flights vs likelihood of weather causing the delay',
subtitle = "Subtitle",
caption = 'Source: publicly available data from DoT') +
theme(plot.caption = element_text(vjust = 7))
ggplot(data=df1[filtro,], aes(x=Date, group=CancellationCode, color=CancellationCode)) +
geom_density() +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
labs(x = 'Likelihood weather is causing delay', y = 'Percentage of delayed flights',
title = 'Percentage of delayed flights vs likelihood of weather causing the delay',
subtitle = "Subtitle",
caption = 'Source: publicly available data from DoT') +
theme(plot.caption = element_text(vjust = 7))
ggplot(data=df1[filtro,], aes(x=as.Date(Date), group=CancellationCode, color=CancellationCode)) +
geom_density() +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
labs(x = 'Likelihood weather is causing delay', y = 'Percentage of delayed flights',
title = 'Percentage of delayed flights vs likelihood of weather causing the delay',
subtitle = "Subtitle",
caption = 'Source: publicly available data from DoT') +
theme(plot.caption = element_text(vjust = 7))
ggplot(data=df1[filtro,], aes(x=as.Date(Date), group=CancellationCode, color=CancellationCode)) +
geom_density() +
scale_x_date(date_breaks = '1 week', date_labels = '%b %d') +
labs(x = 'Likelihood weather is causing delay', y = 'Percentage of delayed flights',
title = 'Percentage of delayed flights vs likelihood of weather causing the delay',
subtitle = "Subtitle",
caption = 'Source: publicly available data from DoT') +
theme(plot.caption = element_text(vjust = 7))
filtro = df1$Date >= start & df1$Date<=end
start = as.Date("2008-11-08")
end = as.Date("2008-12-25")
filtro = df1$Date >= start & df1$Date<=end
ggplot(data=df1[filtro,], aes(x=as.Date(Date), group=CancellationCode, color=CancellationCode)) +
geom_density() +
scale_x_date(date_breaks = '1 week', date_labels = '%b %d') +
labs(x = 'Likelihood weather is causing delay', y = 'Percentage of delayed flights',
title = 'Percentage of delayed flights vs likelihood of weather causing the delay',
subtitle = "Subtitle",
caption = 'Source: publicly available data from DoT') +
theme(plot.caption = element_text(vjust = 7))
runApp()
df1 <- read.csv('vuelosLimpioMap.csv', header=TRUE, sep=",")
library(ggplot2)                         # Plots
library(dplyr)
library(data.table)
df1<-na.omit(df1)
df3<-df1
df3$DelayCRS = df3$ActualElapsedTime - df3$CRSElapsedTime
df4<-aggregate(x=df3 %>% select(ArrDelay,DepDelay,CarrierDelay,WeatherDelay,NASDelay,SecurityDelay,LateAircraftDelay,TotalDelay, DelayCRS),by=list(cut(as.Date(df1$Date), "week")),FUN=sum)
df4 <- df4 %>% rename(Week = Group.1)
df4$DelayCRS[df4$DelayCRS<0]=0
df4$percNoEsperado = df4$DelayCRS / df4$TotalDelay
df4$ArrDelayReal = df4$ArrDelay * df4$percNoEsperado
df4$DepDelayReal = df4$DepDelay * df4$percNoEsperado
df4$CarrierDelayReal = df4$CarrierDelay  * df4$percNoEsperado
df4$WeatherDelayReal = df4$WeatherDelay  * df4$percNoEsperado
df4$NASDelayReal = df4$NASDelay  * df4$percNoEsperado
df4$SecurityDelayReal = df4$SecurityDelay * df4$percNoEsperado
df4$LateAircraftDelayReal = df4$LateAircraftDelay  * df4$percNoEsperado
df4$ArrDelayPerc = df4$ArrDelayReal / df4$TotalDelay
df4$DepDelayPerc = df4$DepDelayReal / df4$TotalDelay
df4$CarrierDelayPerc = df4$CarrierDelayReal / df4$TotalDelay
df4$WeatherDelayPerc = df4$WeatherDelayReal / df4$TotalDelay
df4$NASDelayPerc = df4$NASDelayReal / df4$TotalDelay
df4$SecurityDelayPerc = df4$SecurityDelayReal / df4$TotalDelay
df4$LateAircraftDelayPerc = df4$LateAircraftDelayReal / df4$TotalDelay
dat <- data.table(ArrDelay = df4$ArrDelayPerc,
DepDelay = df4$DepDelayPerc,
CarrierDelay = df4$CarrierDelayPerc,
WeatherDelay = df4$WeatherDelayPerc,
NASDelay = df4$NASDelayPerc,
SecurityDelay = df4$SecurityDelayPerc,
LateAircraftDelay = df4$LateAircraftDelayPerc,
Week = df4$Week)
dat1 = melt(dat, id.vars= c("Week"))
dat1$Week = as.Date(dat1$Week)
ggplot(data = dat1) +
geom_bar(aes(x = Week, y = value, fill = variable),
position = 'stack', stat = 'identity') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(labels = function(x) paste0(x*100, '%')) +
labs(x = 'Time', y = 'Percentage of weekly flights', fill = 'Delay type',
title = 'Breakdown of delay type of flights in the northern part of the US in 2015',
subtitle = 'States that are part of the analysis include AK, IL, IN, MA, ME, MI, MN, NH, NY, VT',
caption = 'Source: publicly available data from DoT') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7))
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
df1 <- read.csv('vuelosLimpioMap.csv', header=TRUE, sep=",")
library("dplyr")
library(ggplot2)
df1$DelayCRS = df1$ActualElapsedTime - df1$CRSElapsedTime
df1<-na.omit(df1)
df2<-aggregate(x=df1 %>% select(ArrDelay,DepDelay,CarrierDelay,WeatherDelay,NASDelay,SecurityDelay,LateAircraftDelay,TotalDelay, DelayCRS),by=list(df1$Date),FUN=sum)
df3<-aggregate(x=df1 %>% select(Date),by=list(df1$Date),FUN=length)
colnames(df2)<-c("Date", "ArrDelay","DepDelay","CarrierDelay","WeatherDelay","NASDelay","SecurityDelay","LateAircraftDelay","TotalDelay", "DelayCRS")
colnames(df3)<-c("Date", "Count")
df4 = merge(x=df2, y=df3, by = c("Date"), all= TRUE,sort = FALSE)
df4$percNoEsperado = df4$DelayCRS / df4$TotalDelay
df4$Date = as.Date(df4$Date)
ggplot(data = df4) +
geom_line(aes(x = Date, y = Count), color = 'green4') +
geom_line(aes(x = Date, y = percNoEsperado * 20000), color = 'red') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(sec.axis = sec_axis(~ . / 20000,
labels = function(y){paste0(y*100, '%')},
name = 'Percentage of delayed flights')) +
labs(x = 'Time', y = 'Number of daily flights', caption = 'Source: publicly available data from DoT',
title = 'Number of flights in the US in 2015') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7),
axis.title.y.left = element_text(color = 'green4'),
axis.title.y.right = element_text(color = 'red'))
runApp()
df1 <- read.csv('vuelosLimpioMap.csv', header=TRUE, sep=",")
library("dplyr")
library(ggplot2)
df1$DelayCRS = df1$ActualElapsedTime - df1$CRSElapsedTime
df1<-na.omit(df1)
df2<-aggregate(x=df1 %>% select(ArrDelay,DepDelay,CarrierDelay,WeatherDelay,NASDelay,SecurityDelay,LateAircraftDelay,TotalDelay, DelayCRS),by=list(df1$Date),FUN=sum)
df3<-aggregate(x=df1 %>% select(Date),by=list(df1$Date),FUN=length)
colnames(df2)<-c("Date", "ArrDelay","DepDelay","CarrierDelay","WeatherDelay","NASDelay","SecurityDelay","LateAircraftDelay","TotalDelay", "DelayCRS")
colnames(df3)<-c("Date", "Count")
df4 = merge(x=df2, y=df3, by = c("Date"), all= TRUE,sort = FALSE)
df4$percNoEsperado = df4$DelayCRS / df4$TotalDelay
df4$Date = as.Date(df4$Date)
ggplot(data = df4) +
geom_line(aes(x = Date, y = Count), color = 'green4') +
geom_line(aes(x = Date, y = percNoEsperado * Count), color = 'red') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(sec.axis = sec_axis(~ . / Count,
labels = function(y){paste0(y*100, '%')},
name = 'Percentage of delayed flights')) +
labs(x = 'Time', y = 'Number of daily flights', caption = 'Source: publicly available data from DoT',
title = 'Number of flights in the US in 2015') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7),
axis.title.y.left = element_text(color = 'green4'),
axis.title.y.right = element_text(color = 'red'))
ggplot(data = df4) +
geom_line(aes(x = Date, y = Count), color = 'green4') +
geom_line(aes(x = Date, y = percNoEsperado * Count), color = 'red') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(sec.axis = sec_axis(~ . / 2000,
labels = function(y){paste0(y*100, '%')},
name = 'Percentage of delayed flights')) +
labs(x = 'Time', y = 'Number of daily flights', caption = 'Source: publicly available data from DoT',
title = 'Number of flights in the US in 2015') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7),
axis.title.y.left = element_text(color = 'green4'),
axis.title.y.right = element_text(color = 'red'))
View(df4)
ggplot(data = df4) +
geom_line(aes(x = Date, y = Count), color = 'green4') +
geom_line(aes(x = Date, y = percNoEsperado * Count), color = 'red') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(sec.axis = sec_axis(~ . / 8000,
labels = function(y){paste0(y*100, '%')},
name = 'Percentage of delayed flights')) +
labs(x = 'Time', y = 'Number of daily flights', caption = 'Source: publicly available data from DoT',
title = 'Number of flights in the US in 2015') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7),
axis.title.y.left = element_text(color = 'green4'),
axis.title.y.right = element_text(color = 'red'))
View(df3)
df2<-aggregate(x=df1 %>% select(TotalDelay, DelayCRS),by=list(df1$Date),FUN=sum)
df2$RealDelay = df2$TotalDelay - df2$DelayCRS
df2<-aggregate(x=df1 %>% select(TotalDelay, DelayCRS),by=list(df1$Date),FUN=sum)
df2$Delayed = df2$DelayCRS > 0
df1<-na.omit(df1)
df1$DelayCRS = df1$ActualElapsedTime - df1$CRSElapsedTime
df1$Delayed = df1$DelayCRS > 0
View(df1)
df2<-aggregate(x=df1 %>%select(Date, Delayed), by=list(df1$Delayed, df1$Date), FUN=length)
df2<-aggregate(x=df1 %>%select(Delayed), by=list(df1$Delayed, df1$Date), FUN=length)
colnames(df2)<-c("Delayed", "Date","Count")
df2$Date = as.Date(df2$Date)
df2<-df2[df2$Delayed==TRUE,]%>%select(Date, Count)
colnames(df3)<-c("Date", "Count")
df4 = merge(x=df2, y=df3, by = c("Date"), all= TRUE,sort = FALSE)
View(df4)
df2<-aggregate(x=df1 %>%select(Delayed), by=list(df1$Delayed, df1$Date), FUN=length)
df3<-aggregate(x=df1 %>% select(Date),by=list(df1$Date),FUN=length)
colnames(df2)<-c("Delayed", "Date", "Count")
df2<-df2[df2$Delayed==TRUE,]%>%select(Date, Count)
df2$Date <- as.Date(df2$Date)
colnames(df3)<-c("Date", "Count")
df3$Date <- as.Date(df3$Date)
df4 = merge(x=df2, y=df3, by = c("Date"), all= TRUE,sort = FALSE)
View(df4)
colnames(df4)<-c("Date", "DelayedCount", "TotalCount")
df4$Date = as.Date(df4$Date)
ggplot(data = df4) +
geom_line(aes(x = Date, y = TotalCount), color = 'green4') +
geom_line(aes(x = Date, y = DelayedCount), color = 'red') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(sec.axis = sec_axis(~ . / 8000,
labels = function(y){paste0(y*100, '%')},
name = 'Percentage of delayed flights')) +
labs(x = 'Time', y = 'Number of daily flights', caption = 'Source: publicly available data from DoT',
title = 'Number of flights in the US in 2015') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7),
axis.title.y.left = element_text(color = 'green4'),
axis.title.y.right = element_text(color = 'red'))
ggplot(data = df4) +
geom_line(aes(x = Date, y = TotalCount), color = 'green4') +
geom_line(aes(x = Date, y = DelayedCount), color = 'red') +
scale_x_date(date_breaks = '1 week', date_labels = '%b %d') +
scale_y_continuous(sec.axis = sec_axis(~ . / 8000,
labels = function(y){paste0(y*100, '%')},
name = 'Percentage of delayed flights')) +
labs(x = 'Time', y = 'Number of daily flights', caption = 'Source: publicly available data from DoT',
title = 'Number of flights in the US in 2015') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7),
axis.title.y.left = element_text(color = 'green4'),
axis.title.y.right = element_text(color = 'red'))
start = as.Date("2008-11-08")
end = as.Date("2008-12-25")
filtro = df1$Date >= start & df1$Date<=end
ggplot(data = df4[filtro,]) +
geom_line(aes(x = Date, y = TotalCount), color = 'green4') +
geom_line(aes(x = Date, y = DelayedCount), color = 'red') +
scale_x_date(date_breaks = '1 week', date_labels = '%b %d') +
scale_y_continuous(sec.axis = sec_axis(~ . / 8000,
labels = function(y){paste0(y*100, '%')},
name = 'Percentage of delayed flights')) +
labs(x = 'Time', y = 'Number of daily flights', caption = 'Source: publicly available data from DoT',
title = 'Number of flights in the US in 2015') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7),
axis.title.y.left = element_text(color = 'green4'),
axis.title.y.right = element_text(color = 'red'))
ggplot(data = df4[filtro,]) +
geom_line(aes(x = Date, y = TotalCount), color = 'green4') +
geom_line(aes(x = Date, y = DelayedCount), color = 'red') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(sec.axis = sec_axis(~ . / 8000,
labels = function(y){paste0(y*100, '%')},
name = 'Percentage of delayed flights')) +
labs(x = 'Time', y = 'Number of daily flights', caption = 'Source: publicly available data from DoT',
title = 'Number of flights in the US in 2015') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7),
axis.title.y.left = element_text(color = 'green4'),
axis.title.y.right = element_text(color = 'red'))
df1 <- read.csv('vuelosLimpioMap.csv', header=TRUE, sep=",")
library("dplyr")
library(ggplot2)
filtro = df1$Date >= start & df1$Date<=end
df1<-na.omit(df1)[filtro,]
df1$DelayCRS = df1$ActualElapsedTime - df1$CRSElapsedTime
df1$Delayed = df1$DelayCRS > 0
df2<-aggregate(x=df1 %>%select(Delayed), by=list(df1$Delayed, df1$Date), FUN=length)
df3<-aggregate(x=df1 %>% select(Date),by=list(df1$Date),FUN=length)
colnames(df2)<-c("Delayed", "Date", "Count")
df2<-df2[df2$Delayed==TRUE,]%>%select(Date, Count)
df2$Date <- as.Date(df2$Date)
colnames(df3)<-c("Date", "Count")
df3$Date <- as.Date(df3$Date)
df4 = merge(x=df2, y=df3, by = c("Date"), all= TRUE,sort = FALSE)
colnames(df4)<-c("Date", "DelayedCount", "TotalCount")
df4$Date = as.Date(df4$Date)
ggplot(data = df4) +
geom_line(aes(x = Date, y = TotalCount), color = 'green4') +
geom_line(aes(x = Date, y = DelayedCount), color = 'red') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(sec.axis = sec_axis(~ . / 8000,
labels = function(y){paste0(y*100, '%')},
name = 'Percentage of delayed flights')) +
labs(x = 'Time', y = 'Number of daily flights', caption = 'Source: publicly available data from DoT',
title = 'Number of flights in the US in 2015') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7),
axis.title.y.left = element_text(color = 'green4'),
axis.title.y.right = element_text(color = 'red'))
df1 <- read.csv('vuelosLimpioMap.csv', header=TRUE, sep=",")
library("dplyr")
library(ggplot2)
start = as.Date("2008-11-08")
end = as.Date("2008-12-25")
filtro = df1$Date >= start & df1$Date<=end
df1<-na.omit(df1)[filtro,]
df1$DelayCRS = df1$ActualElapsedTime - df1$CRSElapsedTime
df1$Delayed = df1$DelayCRS > 0
df2<-aggregate(x=df1 %>%select(Delayed), by=list(df1$Delayed, df1$Date), FUN=length)
df3<-aggregate(x=df1 %>% select(Date),by=list(df1$Date),FUN=length)
colnames(df2)<-c("Delayed", "Date", "Count")
df2<-df2[df2$Delayed==TRUE,]%>%select(Date, Count)
df2$Date <- as.Date(df2$Date)
colnames(df3)<-c("Date", "Count")
df3$Date <- as.Date(df3$Date)
df4 = merge(x=df2, y=df3, by = c("Date"), all= TRUE,sort = FALSE)
colnames(df4)<-c("Date", "DelayedCount", "TotalCount")
df4$Date = as.Date(df4$Date)
ggplot(data = df4) +
geom_line(aes(x = Date, y = TotalCount), color = 'green4') +
geom_line(aes(x = Date, y = DelayedCount), color = 'red') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(sec.axis = sec_axis(~ . / 8000,
labels = function(y){paste0(y*100, '%')},
name = 'Percentage of delayed flights')) +
labs(x = 'Time', y = 'Number of daily flights', caption = 'Source: publicly available data from DoT',
title = 'Number of flights in the US in 2015') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7),
axis.title.y.left = element_text(color = 'green4'),
axis.title.y.right = element_text(color = 'red'))
df1 <- read.csv('vuelosLimpioMap.csv', header=TRUE, sep=",")
library("dplyr")
library(ggplot2)
start = as.Date("2008-11-08")
end = as.Date("2008-12-25")
filtro = df1$Date >= start & df1$Date<=end
df1<-na.omit(df1)
df1$DelayCRS = df1$ActualElapsedTime - df1$CRSElapsedTime
df1$Delayed = df1$DelayCRS > 0
df2<-aggregate(x=df1[filtro,] %>%select(Delayed), by=list(df1$Delayed, df1$Date), FUN=length)
df3<-aggregate(x=df1[filtro,] %>% select(Date),by=list(df1$Date),FUN=length)
colnames(df2)<-c("Delayed", "Date", "Count")
df2<-df2[df2$Delayed==TRUE,]%>%select(Date, Count)
df2$Date <- as.Date(df2$Date)
colnames(df3)<-c("Date", "Count")
df3$Date <- as.Date(df3$Date)
df4 = merge(x=df2, y=df3, by = c("Date"), all= TRUE,sort = FALSE)
colnames(df4)<-c("Date", "DelayedCount", "TotalCount")
df4$Date = as.Date(df4$Date)
ggplot(data = df4) +
geom_line(aes(x = Date, y = TotalCount), color = 'green4') +
geom_line(aes(x = Date, y = DelayedCount), color = 'red') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(sec.axis = sec_axis(~ . / 8000,
labels = function(y){paste0(y*100, '%')},
name = 'Percentage of delayed flights')) +
labs(x = 'Time', y = 'Number of daily flights', caption = 'Source: publicly available data from DoT',
title = 'Number of flights in the US in 2015') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7),
axis.title.y.left = element_text(color = 'green4'),
axis.title.y.right = element_text(color = 'red'))
filtro = df1$Date >= start & df1$Date<=end
df1 <- read.csv('vuelosLimpioMap.csv', header=TRUE, sep=",")
library("dplyr")
library(ggplot2)
start = as.Date("2008-11-08")
end = as.Date("2008-12-25")
filtro = df1$Date >= start & df1$Date<=end
df1<-na.omit(df1)
df1<-df1[filtro,]
df1$DelayCRS = df1$ActualElapsedTime - df1$CRSElapsedTime
df1$Delayed = df1$DelayCRS > 0
df2<-aggregate(x=df1 %>%select(Delayed), by=list(df1$Delayed, df1$Date), FUN=length)
df3<-aggregate(x=df1 %>% select(Date),by=list(df1$Date),FUN=length)
colnames(df2)<-c("Delayed", "Date", "Count")
df2<-df2[df2$Delayed==TRUE,]%>%select(Date, Count)
df2$Date <- as.Date(df2$Date)
colnames(df3)<-c("Date", "Count")
df3$Date <- as.Date(df3$Date)
df4 = merge(x=df2, y=df3, by = c("Date"), all= TRUE,sort = FALSE)
colnames(df4)<-c("Date", "DelayedCount", "TotalCount")
df4$Date = as.Date(df4$Date)
ggplot(data = df4) +
geom_line(aes(x = Date, y = TotalCount), color = 'green4') +
geom_line(aes(x = Date, y = DelayedCount), color = 'red') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(sec.axis = sec_axis(~ . / 8000,
labels = function(y){paste0(y*100, '%')},
name = 'Percentage of delayed flights')) +
labs(x = 'Time', y = 'Number of daily flights', caption = 'Source: publicly available data from DoT',
title = 'Number of flights in the US in 2015') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7),
axis.title.y.left = element_text(color = 'green4'),
axis.title.y.right = element_text(color = 'red'))
View(df2)
filtro = df1$Date >= start & df1$Date<=end
df1<-na.omit(df1)
df1$DelayCRS = df1$ActualElapsedTime - df1$CRSElapsedTime
df1$Delayed = df1$DelayCRS > 0
df2<-aggregate(x=df1 %>%select(Delayed), by=list(df1$Delayed, df1$Date), FUN=length)
df3<-aggregate(x=df1 %>% select(Date),by=list(df1$Date),FUN=length)
colnames(df2)<-c("Delayed", "Date", "Count")
df2<-df2[df2$Delayed==TRUE,]%>%select(Date, Count)
df2$Date <- as.Date(df2$Date)
colnames(df3)<-c("Date", "Count")
df3$Date <- as.Date(df3$Date)
df4 = merge(x=df2, y=df3, by = c("Date"), all= TRUE,sort = FALSE)
colnames(df4)<-c("Date", "DelayedCount", "TotalCount")
df4$Date = as.Date(df4$Date)
df4<-df4[filtro,]
ggplot(data = df4) +
geom_line(aes(x = Date, y = TotalCount), color = 'green4') +
geom_line(aes(x = Date, y = DelayedCount), color = 'red') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(sec.axis = sec_axis(~ . / 8000,
labels = function(y){paste0(y*100, '%')},
name = 'Percentage of delayed flights')) +
labs(x = 'Time', y = 'Number of daily flights', caption = 'Source: publicly available data from DoT',
title = 'Number of flights in the US in 2015') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7),
axis.title.y.left = element_text(color = 'green4'),
axis.title.y.right = element_text(color = 'red'))
df3$Date <- as.Date(df3$Date)
df4 = merge(x=df2, y=df3, by = c("Date"), all= TRUE,sort = FALSE)
df4$Date = as.Date(df4$Date)
df4<-df4[filtro,]
df5<-df4[filtro,]
ggplot(data = df5) +
geom_line(aes(x = Date, y = TotalCount), color = 'green4') +
geom_line(aes(x = Date, y = DelayedCount), color = 'red') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(sec.axis = sec_axis(~ . / 8000,
labels = function(y){paste0(y*100, '%')},
name = 'Percentage of delayed flights')) +
labs(x = 'Time', y = 'Number of daily flights', caption = 'Source: publicly available data from DoT',
title = 'Number of flights in the US in 2015') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7),
axis.title.y.left = element_text(color = 'green4'),
axis.title.y.right = element_text(color = 'red'))
df4 = merge(x=df2, y=df3, by = c("Date"), all= TRUE,sort = FALSE)
colnames(df4)<-c("Date", "DelayedCount", "TotalCount")
df4$Date = as.Date(df4$Date)
df5<-df4[filtro,]
ggplot(data = df5) +
geom_line(aes(x = Date, y = TotalCount), color = 'green4') +
geom_line(aes(x = Date, y = DelayedCount), color = 'red') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(sec.axis = sec_axis(~ . / 8000,
labels = function(y){paste0(y*100, '%')},
name = 'Percentage of delayed flights')) +
labs(x = 'Time', y = 'Number of daily flights', caption = 'Source: publicly available data from DoT',
title = 'Number of flights in the US in 2015') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7),
axis.title.y.left = element_text(color = 'green4'),
axis.title.y.right = element_text(color = 'red'))
df4<-na.omit(df4[filtro,])
ggplot(data = df4) +
geom_line(aes(x = Date, y = TotalCount), color = 'green4') +
geom_line(aes(x = Date, y = DelayedCount), color = 'red') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(sec.axis = sec_axis(~ . / 8000,
labels = function(y){paste0(y*100, '%')},
name = 'Percentage of delayed flights')) +
labs(x = 'Time', y = 'Number of daily flights', caption = 'Source: publicly available data from DoT',
title = 'Number of flights in the US in 2015') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7),
axis.title.y.left = element_text(color = 'green4'),
axis.title.y.right = element_text(color = 'red'))
runApp()
runApp()
#_________________________________________________________________________________________________________
dtt<-na.omit(df1)
#_________________________________________________________________________________________________________
dtt<-na.omit(df1)
dtt<-na.omit(df1)
dtt$DelayCRS = dtt$ActualElapsedTime - dtt$CRSElapsedTime
dtt$Delayed = dtt$DelayCRS > 0
dtt<-na.omit(df1)
dtt<-na.omit(df1)
dtt$DelayCRS = dtt$ActualElapsedTime - dtt$CRSElapsedTime
dtt$Delayed = dtt$DelayCRS > 0
View(dtt)
start = as.Date("2008-01-12")
end = as.Date("2008-02-25")
dtt<-na.omit(df1)
dtt$Delayed = dtt$TotalTimeDifference > 0
dtt2<-aggregate(x=dtt %>%select(Delayed), by=list(dtt$Delayed, dtt$Date), FUN=length)
df3<-aggregate(x=dtt %>% select(Date),by=list(dtt$Date),FUN=length)
colnames(df2)<-c("Delayed", "Date", "Count")
colnames(dtt2)<-c("Delayed", "Date", "Count")
dtt2<-dtt2[dtt2$Delayed==TRUE,]%>%select(Date, Count)
dtt2$Date <- as.Date(dtt2$Date)
colnames(df3)<-c("Date", "Count")
df3$Date <- as.Date(df3$Date)
df4 = merge(x=dtt2, y=df3, by = c("Date"), all= TRUE,sort = FALSE)
colnames(df4)<-c("Date", "DelayedCount", "TotalCount")
df4$Date = as.Date(df4$Date)
filtro = df4$Date >= start & df4$Date<=end
df4<-df4[filtro,]
ggplot(data = df4) +
geom_line(aes(x = Date, y = TotalCount), color = 'green4') +
geom_line(aes(x = Date, y = DelayedCount), color = 'red') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(sec.axis = sec_axis(~ . / 8000,
labels = function(y){paste0(y*100, '%')},
name = 'Percentage of delayed flights')) +
labs(x = 'Time', y = 'Number of daily flights', caption = 'Source: publicly available data from DoT',
title = 'Number of flights in the US in 2015') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7),
axis.title.y.left = element_text(color = 'green4'),
axis.title.y.right = element_text(color = 'red'))
runApp()
