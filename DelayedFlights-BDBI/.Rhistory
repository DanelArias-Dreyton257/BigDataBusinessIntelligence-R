shiny::runApp()
setwd("C:/Users/danel/github/BigDataBusinessIntelligence-R/DelayedFlights-BDBI")
runApp()
runApp()
runApp()
df1
#Testing
df1 <- read.csv('vuelosLimpio.csv', header=TRUE, sep=",")
dim(df1)
head(df1)
#visualizaciones
quantile(df1$TotalDelay[is.na(df1$TotalDelay)==FALSE])
filtro = (is.na(df1$TotalDelay)==FALSE) & (df1$TotalDelay >= -7) & (df1$TotalDelay<=10)
delay_filtrado = df1$TotalDelay[filtro]
summary(delay_filtrado)
#violin
ggplot(df1[filtro,], aes(x=FlightNum, y=TotalDelay, fill=FlightNum)) + geom_violin() #revisar
#librerias
library("ggplot2")
#violin
ggplot(df1[filtro,], aes(x=FlightNum, y=TotalDelay, fill=FlightNum)) + geom_violin() #revisar
#histograma
hist(df1$TotalDelay[filtro])
#densidad
ggplot(df1[filtro,], aes(x=Date, group=UniqueCarrier, color=UniqueCarrier)) + geom_density()
runApp()
runApp()
runApp()
runApp()
#Testing
df1 <- read.csv('vuelosLimpio.csv', header=TRUE, sep=",")
#librerias
library("ggplot2")
#librerias
library("ggplot2")
#
ggplot() +
geom_sf(data = df1, aes(fill = UniqueCarrier), color = 'black') +
coord_sf(xlim = c(-125, -67), ylim = c(24, 50)) +
labs(title = 'Most popular airline per state', subtitle = 'Data averaged across 2015',
caption = 'Source: publicly available data from DoT', fill = 'Airline') +
theme_void() +
theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5),
axis.title = element_blank())
#moar
library(ggrepel)                         # Nice labels
#librerias
library("ggplot2")
#moar
library(ggrepel)                         # Nice labels
library(gganimate)                       # Animations
library(ggspatial);library(sf)           # Map plots
library(maps);library(rnaturalearth)     # Map data
theme_set(theme_bw())                    # Set theme for all plots
#
ggplot() +
geom_sf(data = df1, aes(fill = UniqueCarrier), color = 'black') +
coord_sf(xlim = c(-125, -67), ylim = c(24, 50)) +
labs(title = 'Most popular airline per state', subtitle = 'Data averaged across 2015',
caption = 'Source: publicly available data from DoT', fill = 'Airline') +
theme_void() +
theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5),
axis.title = element_blank())
#
ggplot(data = df1) +
geom_bar(aes(x = date, y = TotalDelay, fill = Cancelled),
position = 'stack', stat = 'identity') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(labels = function(x) paste0(x*100, '%')) +
labs(x = 'Time', y = 'Percentage of weekly flights', fill = 'Delay type',
title = 'Breakdown of delay type of flights in the northern part of the US in 2015',
subtitle = 'States that are part of the analysis include AK, IL, IN, MA, ME, MI, MN, NH, NY, VT',
caption = 'Source: publicly available data from DoT') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7))
#
ggplot(data = df1) +
geom_bar(aes(x = Date, y = TotalDelay, fill = Cancelled),
position = 'stack', stat = 'identity') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(labels = function(x) paste0(x*100, '%')) +
labs(x = 'Time', y = 'Percentage of weekly flights', fill = 'Delay type',
title = 'Breakdown of delay type of flights in the northern part of the US in 2015',
subtitle = 'States that are part of the analysis include AK, IL, IN, MA, ME, MI, MN, NH, NY, VT',
caption = 'Source: publicly available data from DoT') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7))
df1$Date = as.Date(df1$Date)
#
ggplot(data = df1) +
geom_bar(aes(x = Date, y = TotalDelay, fill = Cancelled),
position = 'stack', stat = 'identity') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(labels = function(x) paste0(x*100, '%')) +
labs(x = 'Time', y = 'Percentage of weekly flights', fill = 'Delay type',
title = 'Breakdown of delay type of flights in the northern part of the US in 2015',
subtitle = 'States that are part of the analysis include AK, IL, IN, MA, ME, MI, MN, NH, NY, VT',
caption = 'Source: publicly available data from DoT') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7))
#
ggplot(data = df1) +
geom_bar(aes(x = Date, y = Origin, fill = Cancelled),
position = 'stack', stat = 'identity') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(labels = function(x) paste0(x*100, '%')) +
labs(x = 'Time', y = 'Y Label', fill = 'Fill',
title = 'Title',
subtitle = 'Subtitle',
caption = 'Caption') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7))
#
ggplot(data = df1) +
geom_bar(aes(x = Date, y = AirTime, fill = Cancelled),
position = 'stack', stat = 'identity') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(labels = function(x) paste0(x*100, '%')) +
labs(x = 'Time', y = 'Y Label', fill = 'Fill',
title = 'Title',
subtitle = 'Subtitle',
caption = 'Caption') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7))
#
ggplot(data = df1) +
geom_bar(aes(x = Date, y = Distance, fill = Origin),
position = 'stack', stat = 'identity') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(labels = function(x) paste0(x*100, '%')) +
labs(x = 'Time', y = 'Y Label', fill = 'Fill',
title = 'Title',
subtitle = 'Subtitle',
caption = 'Caption') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7))
#
ggplot(data = df1) +
geom_bar(aes(x = Date, y = Distance, fill = UniqueCarrier),
position = 'stack', stat = 'identity') +
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
scale_y_continuous(labels = function(x) paste0(x*100, '%')) +
labs(x = 'Time', y = 'Y Label', fill = 'Fill',
title = 'Title',
subtitle = 'Subtitle',
caption = 'Caption') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7))
dim(df1)
head(df1)
df1$Origin
df2 <- read.csv('datosMapa.csv', header=TRUE, sep=",")
head(df2)
df2 <- read.csv('table-1.csv', header=TRUE, sep=",")
head(df2)
filtro = is.na(df2$FAA) & is.na(df2$IATA) & is.na(df2$ICAO)
df2[filtro == FALSE,]
head(df2[filtro == FALSE,])
head(df2[filtro,])
filtro
filtro = is.na(df2$FAA) && is.na(df2$IATA) && is.na(df2$ICAO)
head(df2[filtro,])
head(df2[is.na(df2$IATA) == FALSE,])
head(df2)
df2[df2$FAA == "",] = NULL
df2[df2$FAA == "",] = NA
head(df2)
df2 <- read.csv('table-1.csv', header=TRUE, sep=",")
head(df2)
df2 <- read.csv('table-1.csv', header=TRUE, sep=",")
head(df2)
df2$Role = NULL
df2$Enplanements = NULL
df2[df2$FAA == "",] = NA
filtro = is.na(df2$FAA)
df2[filtro,]
df2[filtro = FALSE,]
df2[filtro == FALSE,]
df2Final = df2[filtro == FALSE,]
write.csv(df2Final,"IATANames.csv")
write.csv(df2Final,"IATANames.csv", row.names = FALSE)
View(df1)
origenes = df2$City[df1$Origin==df2$IATA]
df3 <- read.csv("IATANames.csv", header=TRUE, sep=",")
df3 <- read.csv("IATANames.csv", header=TRUE, sep=",")
df3$ICAO=NULL
df3$FAA = NULL
df3$Airport = NULL
df3
origenes = merge(x=df1, y=df3, by.x=c('Origin'),by.y=c('IATA'), all.x= TRUE )
origenes
head(origenes)
View(origenes)
origenes = merge(x=df1, y=df3, by.x=c('Origin'),by.y=c('IATA'), all.x= TRUE,sort = FALSE)
head(origenes)
df3 <- read.csv("IATANames.csv", header=TRUE, sep=",")
df3$ICAO=NULL
df3$FAA = NULL
head(df3)
origenes = merge(x=df1, y=df3, by.x=c('Origin'),by.y=c('IATA'), all.x= TRUE,sort = FALSE, suffixes = c("Code","Origin"))
head(origenes)
origenes = merge(x=df1, y=df3, by.x=c('Origin'),by.y=c('IATA'), all.x= TRUE,sort = FALSE)
head(origenes)
library(tidyverse)
origenes %>%
rename(
Origin = OriginCode,
City = OriginCity,
Airport = OriginAirport
)
origenes %>%
rename(
OriginCode = Origin,
OriginCity = City,
OriginAirport = Airport
)
destinos = merge(x=origenes, y=df3, by.x=c('Dest'),by.y=c('IATA'), all.x= TRUE,sort = FALSE)
head(destinos)
origenes <- origenes %>%
rename(
OriginCode = Origin,
OriginCity = City,
OriginAirport = Airport
)
destinos = merge(x=origenes, y=df3, by.x=c('Dest'),by.y=c('IATA'), all.x= TRUE,sort = FALSE)
head(destinos)
View(destinos)
destinos <- destinos %>%
rename(
DestCode = Dest,
DestCity = City,
DestAirport = Airport
)
head(df4)
df4 = destinos
head(df4)
summary(df4)
write.csv(df4,"vuelosLimpio2.csv", row.names = FALSE)
View(df3)
df1 <- read.csv('vuelosLimpio.csv', header=TRUE, sep=",")
df2 <- read.csv('table-1.csv', header=TRUE, sep=",")
head(df2)
df2$Role = NULL
df2$Enplanements = NULL
df2 <- read.csv('table-1.csv', header=TRUE, sep=",")
head(df2)
df2 <- read.csv('table-1.csv', header=TRUE, sep=",")
head(df2)
statesDF <-read.csv('table-1-states.csv', header=TRUE, sep=",")
View(statesDF)
statesDF <-read.csv('table-1-states2.csv', header=TRUE, sep=",")
View(statesDF)
statesDF <-read.csv('table-1-states2.csv', header=TRUE, sep=',')
statesDF <-read.csv('table-1-states.csv', header=TRUE, sep=',')
statesDF <-read.csv('table-1-states2.csv', header=TRUE, sep=',')
statesDF <-read.csv('table-1-states2.csv', header=TRUE, sep=',')
View(statesDF)
df1 <- read.csv('vuelosLimpio.csv', header=TRUE, sep=",")
df2 <- read.csv('table-1-states2.csv', header=TRUE, sep=",")
head(df2)
df2$Role = NULL
df2$Enplanements = NULL
df2[df2$FAA == "",] = NA
filtro = is.na(df2$FAA)
head(df2)
df2Final = df2[filtro == FALSE,]
write.csv(df2Final,"IATANames.csv", row.names = FALSE)
df3 <- read.csv("IATANames.csv", header=TRUE, sep=",")
df2 <- read.csv('table-1-states2.csv', header=TRUE, sep=",")
head(df2)
df2$Role = NULL
df2$Enplanements = NULL
df2[df2$FAA == "",] = NA
filtro = is.na(df2$FAA)
head(df2)
df2Final = df2[filtro == FALSE,]
write.csv(df2Final,"IATANames.csv", row.names = FALSE)
df3 <- read.csv("IATANames.csv", header=TRUE, sep=",")
df2 <- read.csv('table-1-states2.csv', header=TRUE, sep=",")
head(df2)
df2$Role = NULL
df2$Enplanements = NULL
df2[df2$FAA == "",] = NA
filtro = is.na(df2$FAA)
head(df2)
df2Final = df2[filtro == FALSE,]
write.csv(df2Final,"IATANames.csv", row.names = FALSE)
df3 <- read.csv("IATANames.csv", header=TRUE, sep=",")
View(df2Final)
View(df2)
df2 <- read.csv('table-1-states2.csv', header=TRUE, sep=",")
head(df2)
df2$Role = NULL
df2$Enplanements = NULL
df2[df2$FAA == "",] = NA
filtro = is.na(df2$FAA)
head(df2)
df2Final = df2[filtro == FALSE,]
write.csv(df2Final,"IATANames.csv", row.names = FALSE, sep=",")
df3 <- read.csv("IATANames.csv", header=TRUE, sep=",")
df2 <- read.csv('table-1-states2.csv', header=TRUE, sep=",")
head(df2)
df2$Role = NULL
df2$Enplanements = NULL
df2[df2$FAA == "",] = NA
filtro = is.na(df2$FAA)
head(df2)
df2Final = df2[filtro == FALSE,]
write.csv(df2Final,"IATANames.csv", row.names = FALSE)
df3 <- read.csv("IATANames.csv", header=TRUE, sep=",")
df2 <- read.csv('table-1-states2.csv', header=TRUE, sep=",")
head(df2)
df2$Role = NULL
df2$Enplanements = NULL
df2[df2$FAA == "",] = NA
filtro = is.na(df2$FAA)
head(df2)
df2Final = df2[filtro == FALSE,]
write.csv(df2Final,"IATANames.csv", row.names = FALSE)
df3 <- read.csv("IATANames.csv", header=TRUE, sep=",")
df3 <- read.csv("IATANames.csv", header=TRUE, sep=",")
df3$ICAO=NULL
View(df3)
df3$FAA = NULL
head(df3)
origenes = merge(x=df1, y=df3, by.x=c('Origin'),by.y=c('IATA'), all.x= TRUE,sort = FALSE)
View(origenes)
head(origenes)
library(tidyverse)
origenes <- origenes %>%
rename(
OriginCode = Origin,
OriginCity = City,
OriginAirport = Airport,
OriginState = State
)
destinos = merge(x=origenes, y=df3, by.x=c('Dest'),by.y=c('IATA'), all.x= TRUE,sort = FALSE)
head(destinos)
destinos <- destinos %>%
rename(
DestCode = Dest,
DestCity = City,
DestAirport = Airport,
DestState = State
)
df4 = destinos
head(df4)
summary(df4)
write.csv(df4,"vuelosLimpio2.csv", row.names = FALSE)
