setwd("C:/Users/danel/github/BigDataBusinessIntelligence-R/DelayedFlights-BDBI/")
library(PerformanceAnalytics)
library("dplyr")
df1 <- read.csv("vuelosLimpioMap.csv", header=TRUE, sep=",")
df1<- df1[sample(nrow(df1), size=200000), ] #coger una muetsra para que shiny no tarde tanto
data<-df1 %>%select(ActualElapsedTime,
CRSElapsedTime,
AirTime,
ArrDelay,
DepDelay,
Distance,
TaxiIn,
TaxiOut,
CarrierDelay,
WeatherDelay,
NASDelay,
SecurityDelay,
LateAircraftDelay
)
pdf(file="correlationPlot.pdf")
chart.Correlation(data, histogram = TRUE, method = "pearson")
dev.off()
df1 <- read.csv("vuelosLimpioMap.csv", header=TRUE, sep=",")
df1<- df1[sample(nrow(df1), size=100000), ] #coger una muetsra para que shiny no tarde tanto
data<-df1 %>%select(ActualElapsedTime,
CRSElapsedTime,
AirTime,
ArrDelay,
DepDelay,
Distance,
TaxiIn,
TaxiOut,
CarrierDelay,
WeatherDelay,
NASDelay,
SecurityDelay,
LateAircraftDelay
)
pdf(file="correlationPlot.pdf")
chart.Correlation(data, histogram = TRUE, method = "pearson")
dev.off()
q()
df1 <- read.csv("vuelosLimpioMap.csv", header=TRUE, sep=",")
library(PerformanceAnalytics)
library("dplyr")
df1<- df1[sample(nrow(df1), size=100000), ] #coger una muetsra para que shiny no tarde tanto
data<-df1 %>%select(ActualElapsedTime,
CRSElapsedTime,
AirTime,
ArrDelay,
DepDelay,
Distance,
TaxiIn,
TaxiOut,
CarrierDelay,
WeatherDelay,
NASDelay,
SecurityDelay,
LateAircraftDelay
)
pdf(file="correlationPlot.pdf")
chart.Correlation(data, histogram = TRUE, method = "pearson")
dev.off()
q()
df1 <- read.csv('vuelosLimpioMap.csv', header=TRUE, sep=",")
library(ggplot2)
library(dplyr)
df2<-na.omit(df1)
dfheat<-aggregate(x=df2 %>%select(X), by=list(df2$OriginState, df2$DestState), FUN=length)
dfheat<-dfheat %>% rename(
OriginState = Group.1,
DestState = Group.2,
Count = X
)
dfheat<-dfheat[order(-df3$heat),]
dfLoli<- dfheat[1:5,]
df3<-aggregate(x=df2 %>%select(CRSElapsedTime,ActualElapsedTime), by=list(df2$OriginState, df2$DestState), FUN=mean)
dfheat<-dfheat[order(-df3heat$Count),]
dfLoli<- dfheat[1:5,]
df3<-aggregate(x=df2 %>%select(CRSElapsedTime,ActualElapsedTime), by=list(df2$OriginState, df2$DestState), FUN=mean)
dfheat<-dfheat[order(-dfheat$Count),]
library(ggplot2)
library(dplyr)
df2<-na.omit(df1)
dfheat<-aggregate(x=df2 %>%select(X), by=list(df2$OriginState, df2$DestState), FUN=length)
dfheat<-dfheat %>% rename(
OriginState = Group.1,
DestState = Group.2,
Count = X
)
dfheat<-dfheat[order(-dfheat$Count),]
dfLoli<- dfheat[1:5,]
df3<-aggregate(x=df2 %>%select(CRSElapsedTime,ActualElapsedTime), by=list(df2$OriginState, df2$DestState), FUN=mean)
df3<-df3 %>% rename(
OriginState = Group.1,
DestState = Group.2,
)
df4 = merge(x=dfLoli, y=df3, by = c("OringState","DestState"), all.x= TRUE,sort = FALSE)
dfLoli <- dfLoli %>% left_join(df3, by=c("OriginState,DestState"))
View(dfLoli)
View(df3)
dfLoli$Vuelo = paste(paste(dfLoli$OriginState,"-"), dfLoli$DestState)
View(dfLoli)
df3$Vuelo = paste(paste(df3$OriginState,"-"), df3$DestState)
dfLoli <- dfLoli %>% left_join(df3, by=c("Vuelo"))
dfLoli <- dfLoli %>%select(Vuelo, CRSElapsedTime, ActualElapsedTime)
ggplot(dfLoli, aes(y=vuelo, x=CRSElapsedTime, xend=ActualElapsedTime)) +
geom_dumbbell(size=3, color="#e3e2e1",
colour_x = "#5b8124", colour_xend = "#bad744",
dot_guide=TRUE, dot_guide_size=0.25,
position=position_dodgev(height=0.4)) +
labs(x=NULL, y=NULL, title="ggplot2 geom_dumbbell with dot guide") +
theme_minimal() +
theme(panel.grid.major.x=element_line(size=0.05))
ggplot(dfLoli, aes(y=vuelo, x=CRSElapsedTime, xend=ActualElapsedTime)) +
geom_dumbbell(size=3, color="#e3e2e1",
colour_x = "#5b8124", colour_xend = "#bad744",
dot_guide=TRUE, dot_guide_size=0.25,
position=position_dodgev(height=0.4)) +
labs(x=NULL, y=NULL, title="ggplot2 geom_dumbbell with dot guide") +
theme_minimal() +
theme(panel.grid.major.x=element_line(size=0.05))
library(ggplot2)
ggplot(dfLoli, aes(y=vuelo, x=CRSElapsedTime, xend=ActualElapsedTime)) +
geom_dumbbell(size=3, color="#e3e2e1",
colour_x = "#5b8124", colour_xend = "#bad744",
dot_guide=TRUE, dot_guide_size=0.25,
position=position_dodgev(height=0.4)) +
labs(x=NULL, y=NULL, title="ggplot2 geom_dumbbell with dot guide") +
theme_minimal() +
theme(panel.grid.major.x=element_line(size=0.05))
library(ggalt)
ggplot(dfLoli, aes(y=vuelo, x=CRSElapsedTime, xend=ActualElapsedTime)) +
geom_dumbbell(size=3, color="#e3e2e1",
colour_x = "#5b8124", colour_xend = "#bad744",
dot_guide=TRUE, dot_guide_size=0.25,
position=position_dodgev(height=0.4)) +
labs(x=NULL, y=NULL, title="ggplot2 geom_dumbbell with dot guide") +
theme_minimal() +
theme(panel.grid.major.x=element_line(size=0.05))
ggplot(dfLoli, aes(y=vuelo, x=CRSElapsedTime, xend=ActualElapsedTime)) +
geom_dumbbell(size=3, color="#e3e2e1",
colour_x = "#5b8124", colour_xend = "#bad744",
dot_guide=TRUE, dot_guide_size=0.25) +
labs(x=NULL, y=NULL, title="ggplot2 geom_dumbbell with dot guide") +
theme_minimal() +
theme(panel.grid.major.x=element_line(size=0.05))
ggplot(dfLoli, aes(y=Vuelo, x=CRSElapsedTime, xend=ActualElapsedTime)) +
geom_dumbbell(size=3, color="#e3e2e1",
colour_x = "#5b8124", colour_xend = "#bad744",
dot_guide=TRUE, dot_guide_size=0.25) +
labs(x=NULL, y=NULL, title="ggplot2 geom_dumbbell with dot guide") +
theme_minimal() +
theme(panel.grid.major.x=element_line(size=0.05))
ggplot(dfLoli[order(dfLoli$ActualElapsedTime),], aes(y=Vuelo, x=CRSElapsedTime, xend=ActualElapsedTime)) +
geom_dumbbell(size=3, color="#e3e2e1",
colour_x = "#5b8124", colour_xend = "#bad744",
dot_guide=TRUE, dot_guide_size=0.25) +
labs(x=NULL, y=NULL, title="ggplot2 geom_dumbbell with dot guide") +
theme_minimal() +
theme(panel.grid.major.x=element_line(size=0.05))
dfLoli[order(dfLoli$ActualElapsedTime),]
ggplot(dfLoli, aes(y=Vuelo, x=CRSElapsedTime, xend=ActualElapsedTime)) +
geom_dumbbell(size=3, color="#e3e2e1",
colour_x = "#5b8124", colour_xend = "#bad744",
dot_guide=TRUE, dot_guide_size=0.25) +
labs(x=NULL, y=NULL, title="ggplot2 geom_dumbbell with dot guide") +
theme_minimal() +
theme(panel.grid.major.x=element_line(size=0.05))
ggplot(dfLoli, aes(y=Vuelo, x=CRSElapsedTime, xend=ActualElapsedTime)) +
geom_dumbbell(size=3, color="#e3e2e1",
colour_x = "#5b8124", colour_xend = "#bad744", dot_guide_size=0.25) +
labs(x=NULL, y=NULL, title="ggplot2 geom_dumbbell with dot guide") +
theme_minimal() +
theme(panel.grid.major.x=element_line(size=0.05))
ggplot(dfLoli, aes(y=Vuelo, x=CRSElapsedTime, xend=ActualElapsedTime)) +
geom_dumbbell(size=3, color="#e3e2e1",
colour_x = "#5b8124", colour_xend = "#bad744", dot_guide_size=0.25) +
labs(x=NULL, y=NULL, title="ggplot2 geom_dumbbell with dot guide") +
theme_minimal() +
theme(panel.grid.major.x=element_line(size=0.05))
dfLoli<-dfLoli[order(dfLoli$ActualElapsedTime),]
ggplot(dfLoli, aes(y=Vuelo, x=CRSElapsedTime, xend=ActualElapsedTime)) +
geom_dumbbell(size=3, color="#e3e2e1",
colour_x = "#5b8124", colour_xend = "#bad744", dot_guide_size=0.25) +
labs(x=NULL, y=NULL, title="ggplot2 geom_dumbbell with dot guide") +
theme_minimal() +
theme(panel.grid.major.x=element_line(size=0.05))
ggplot(dfLoli, aes(y=Vuelo, x=CRSElapsedTime, xend=ActualElapsedTime)) +
geom_dumbbell(size=3, color="#e3e2e1",
colour_x = "#5b8124", colour_xend = "#bad744", dot_guide_size=0.25) +
labs(x=NULL, y=NULL, title="ggplot2 geom_dumbbell with dot guide") +
theme_minimal() +
theme(panel.grid.major.x=element_line(size=0.05))
shiny::runApp()
dat_long <- df1 %>% select(Date,Cancelled)%>%gather("Cancelled", Date)
df1 <- read.csv('vuelosLimpioMap.csv', header=TRUE, sep=",")
library(dplyr)
library(tidyr)
library(ggplot2)
dat_long <- df1 %>% select(Date,Cancelled)%>%gather("Cancelled", Date)
View(dat_long)
library(tidyverse)
dfPata<-df1%>%pivot_longer(Date,names_to="Date",values_to="Cancelled")
dfPata<-df1%>%pivot_longer(Date,values_to="Cancelled")
dfPata<-df1%>%pivot_longer(df1,names_to="Date",values_to="Cancelled")
mydf <- data.frame(geneA = c(0,1,0,1,1,1,1,0,1,0), geneB = c(0,1,1,1,1,0,0,1,1,0), geneC = c(0,1,1,1,0,0,1,1,0,1) ,cluster = c(1,3,1,2,1,3,2,3,2,1))
View(mydf)
#Convert data
mydf_long<-mydf%>%pivot_longer(starts_with("gene"),names_to="Gene",values_to="Expression")
View(mydf_long)
ggplot(data = df1) +
geom_bar(aes(x = Date, y = Cancelled, fill = factor(Cancelled)),
position = 'dodge', stat = 'identity')+
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
labs(x = 'Time', y = 'Percentage of weekly flights', y="y label", fill = 'Delay type',
title = 'Breakdown of delay type of flights in the northern part of the US in 2015',
subtitle = 'States that are part of the analysis include AK, IL, IN, MA, ME, MI, MN, NH, NY, VT',
caption = 'Source: publicly available data from DoT') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7))+
scale_fill_discrete(name = "Cancelado", labels = c("No Cancelado", "Cancelado"))
ggplot(data = df1) +
geom_bar(aes(x = as.Date(Date), y = Cancelled, fill = factor(Cancelled)),
position = 'dodge', stat = 'identity')+
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
labs(x = 'Time', y = 'Percentage of weekly flights', y="y label", fill = 'Delay type',
title = 'Breakdown of delay type of flights in the northern part of the US in 2015',
subtitle = 'States that are part of the analysis include AK, IL, IN, MA, ME, MI, MN, NH, NY, VT',
caption = 'Source: publicly available data from DoT') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7))+
scale_fill_discrete(name = "Cancelado", labels = c("No Cancelado", "Cancelado"))
ggplot(data = df1) +
geom_bar(aes(x = as.Date(Date), y = length(Cancelled), fill = factor(Cancelled)),
position = 'dodge', stat = 'identity')+
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
labs(x = 'Time', y = 'Percentage of weekly flights', y="y label", fill = 'Delay type',
title = 'Breakdown of delay type of flights in the northern part of the US in 2015',
subtitle = 'States that are part of the analysis include AK, IL, IN, MA, ME, MI, MN, NH, NY, VT',
caption = 'Source: publicly available data from DoT') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7))+
scale_fill_discrete(name = "Cancelado", labels = c("No Cancelado", "Cancelado"))
dfpata<-aggregate(x=df1 %>% select(Cancelled),by=list(cut(as.Date(df1$Date,df1$Cancelled), "month")),FUN=length())
dfpata<-aggregate(x=df1 %>% select(Cancelled),by=list(cut(as.Date(df1$Date,df1$Cancelled), "month")),FUN=length)
dfpata<-aggregate(x=df1 %>% select(Cancelled),by=list(cut(as.Date(df1$Date), "month"),df1$Cancelled),FUN=length)
View(dfpata)
dfpata <- dfpata %>% rename(Month = Group.1,
Cancelled=Group.2,
Count=Cancelled)
ggplot(data = dfpata) +
geom_bar(aes(x = as.Date(Month), y = Count, fill = factor(Cancelled)),
position = 'dodge', stat = 'identity')+
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
labs(x = 'Time', y = 'Percentage of weekly flights', y="y label", fill = 'Delay type',
title = 'Breakdown of delay type of flights in the northern part of the US in 2015',
subtitle = 'States that are part of the analysis include AK, IL, IN, MA, ME, MI, MN, NH, NY, VT',
caption = 'Source: publicly available data from DoT') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7))+
scale_fill_discrete(name = "Cancelado", labels = c("No Cancelado", "Cancelado"))
dfpata<-aggregate(x=df1 %>% select(Cancelled),by=list(cut(as.Date(df1$Date), "week"),df1$Cancelled),FUN=length)
dfpata <- dfpata %>% rename(Week = Group.1,
Cancelled=Group.2,
Count=Cancelled)
ggplot(data = dfpata) +
geom_bar(aes(x = as.Date(Week), y = Count, fill = factor(Cancelled)),
position = 'dodge', stat = 'identity')+
scale_x_date(date_breaks = '1 month', date_labels = '%b %d') +
labs(x = 'Time', y = 'Percentage of weekly flights', y="y label", fill = 'Delay type',
title = 'Breakdown of delay type of flights in the northern part of the US in 2015',
subtitle = 'States that are part of the analysis include AK, IL, IN, MA, ME, MI, MN, NH, NY, VT',
caption = 'Source: publicly available data from DoT') +
theme(axis.text.x = element_text(angle = 25, vjust = 0.75), plot.caption = element_text(vjust = 7))+
scale_fill_discrete(name = "Cancelado", labels = c("No Cancelado", "Cancelado"))
df1 <- read.csv('vuelosLimpioMap.csv', header=TRUE, sep=",")
library(ggplot2)
library(dplyr)
library(ggalt)
start = as.Date("2008-01-22")
end = as.Date("2008-02-22")
dfCode <-df1[df1$Cancelled==1,]
View(dfCode)
filtro = dfCode$Date >= start & dfCode$Date<=end
dfCode<-dfCode[filtro,]
start = as.Date("2008-11-22")
end = as.Date("2008-12-22")
dfCode <-df1[df1$Cancelled==1,]
filtro = dfCode$Date >= start & dfCode$Date<=end
dfCode<-dfCode[filtro,]
dfCode$CancellationCode[dfCode$CancellationCode=="A"]="A-Carrier"
dfCode$CancellationCode[dfCode$CancellationCode=="B"]="B-Weather"
dfCode$CancellationCode[dfCode$CancellationCode=="C"]="C-NAS"
dfCode$CancellationCode[dfCode$CancellationCode=="D"]="D-Security"
dfCode<-aggregate(x=dfCode %>%select(X), by=list(dfCode$CancellationCode), FUN=length)
dfCode<-dfCode %>% rename(
CancellationCode = Group.1,
Count = X
)
ggplot(dfCode, aes(x="", y=Count, fill=CancellationCode)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = group), color = "white", size=6)
ggplot(dfCode, aes(x="", y=Count, fill=CancellationCode)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = CancellationCode), color = "white", size=6)
ggplot(dfCode, aes(x="", y=Count, fill=CancellationCode)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none")
ggplot(dfCode, aes(x="", y=Count, fill=CancellationCode)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void()
ggplot(dfCode, aes(x="", y=Count, fill=CancellationCode)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0)
runApp()
ggplot(dfCode, aes(x="", y=Count, fill=CancellationCode)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void()+
})
runApp()
runApp()
df1 <- read.csv('vuelosLimpioMap.csv', header=TRUE, sep=",")
library(ggplot2)
library(dplyr)
# install.packages("treemapify")
library(treemapify)
# install.packages("ggplot2")
library(ggplot2)
dftot<-df1
dftot$Vuelo = paste(paste(dftot$OriginState,"-"), dftot$DestState)
dfcan<-aggregate(x=dftot[dftot$Cancellled==1,] %>% select(X),by=list(Vuelo),FUN=length)
dret<-aggregate(x=dtt[dtt$TotalTimeDifference > 0,] %>%select(X), by=list(Vuelo), FUN=length)
dfcan <- dfcan %>% rename(Vuelo = Group.1,
Count=X)
dfret <- dfret %>% rename(Vuelo = Group.1,
Count=X)
dftot$Vuelo = paste(paste(dftot$OriginState,"-"), dftot$DestState)
dfcan<-aggregate(x=dftot[dftot$Cancellled==1,] %>% select(X),by=list(Vuelo),FUN=length)
View(dftot)
dfcan <- dftot[dftot$Cancellled==1,]
View(dfcan)
df1 <- read.csv('vuelosLimpioMap.csv', header=TRUE, sep=",")
View(df1)
dfcan <-
dfcan<-aggregate(x=dftot[dftot$Cancelled==1,] %>% select(X),by=list(Vuelo),FUN=length)
dftot<-df1
dftot$Vuelo = paste(paste(dftot$OriginState,"-"), dftot$DestState)
dfcan <- dftot[dftot$Cancelled==1,]
dfcan<-aggregate(x=dfcan %>% select(X),by=list(dfcan$Vuelo),FUN=length)
dfret<-dtot[dtot$TotalTimeDifference > 0,]
dfret<-dftot[dftot$TotalTimeDifference > 0,]
dfret<-aggregate(x=dfret %>%select(X), by=list(dfret$Vuelo), FUN=length)
dfcan <- dfcan %>% rename(Vuelo = Group.1,
Count=X)
dfret <- dfret %>% rename(Vuelo = Group.1,
Count=X)
View(dfret)
ggplot(dfcan, aes(area = Count, fill = Vuelo,
label = paste(Vuelo, Count, sep = "\n"))) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "centre",
size = 15) +
theme(legend.position = "none")
ggplot(dfcan[1:10,], aes(area = Count, fill = Vuelo,
label = paste(Vuelo, Count, sep = "\n"))) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "centre",
size = 15) +
theme(legend.position = "none")
dfcan<-dfcan[-order(dfcan$Count),]
dfret<-dfret[-order(dfret$Count),]
ggplot(dfcan[1:10,], aes(area = Count, fill = Vuelo,
label = paste(Vuelo, Count, sep = "\n"))) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "centre",
size = 15) +
theme(legend.position = "none")
dfcan <- dftot[dftot$Cancelled==1,]
dfcan<-aggregate(x=dfcan %>% select(X),by=list(dfcan$Vuelo),FUN=length)
dfret<-dftot[dftot$TotalTimeDifference > 0,]
dfret<-aggregate(x=dfret %>%select(X), by=list(dfret$Vuelo), FUN=length)
dfcan <- dfcan %>% rename(Vuelo = Group.1,
Count=X)
dfret <- dfret %>% rename(Vuelo = Group.1,
Count=X)
dfcan<-dfcan[order(-dfcan$Count),]
dfret<-dfret[order(-dfret$Count),]
ggplot(dfcan[1:10,], aes(area = Count, fill = Vuelo,
label = paste(Vuelo, Count, sep = "\n"))) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "centre",
size = 15) +
theme(legend.position = "none")
ggplot(dfret[1:10,], aes(area = Count, fill = Vuelo,
label = paste(Vuelo, Count, sep = "\n"))) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "centre",
size = 15) +
theme(legend.position = "none")
ggplot(dfret[1:15,], aes(area = Count, fill = Vuelo,
label = paste(Vuelo, Count, sep = "\n"))) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "centre",
size = 15) +
theme(legend.position = "none")
ggplot(dfret[1:30,], aes(area = Count, fill = Vuelo,
label = paste(Vuelo, Count, sep = "\n"))) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "centre",
size = 15) +
theme(legend.position = "none")
ggplot(dfret[1:7,], aes(area = Count, fill = Vuelo,
label = paste(Vuelo, Count, sep = "\n"))) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "centre",
size = 15) +
theme(legend.position = "none")
ggplot(dfcan[1:7,], aes(area = Count, fill = Vuelo,
label = paste(Vuelo, Count, sep = "\n"))) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "centre",
size = 15) +
theme(legend.position = "none")
ggplot(dfret[1:7,], aes(area = Count, fill = Vuelo,
label = paste(Vuelo, Count, sep = "\n"))) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "centre",
size = 15) +
theme(legend.position = "none")
ggplot(dfret[1:5,], aes(area = Count, fill = Vuelo,
label = paste(Vuelo, Count, sep = "\n"))) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "centre",
size = 15) +
theme(legend.position = "none")
